USE ODS;

/*- INSERTAMOS LOS DISTINTOS VALORES DE PRODUCTOS DE STAGING -------------*/ 
INSERT INTO ODS_DM_PRODUCTOS (DE_PRODUCTO, FC_INSERT, FC_MODIFICACION)
SELECT DISTINCT UPPER(TRIM(PRODUCT_NAME)) DE_PRODUCTO, NOW(), NOW()
FROM STAGE.STG_PRODUCTOS_CRM
WHERE LENGTH(TRIM(PRODUCT_NAME))!=0;

COMMIT;

INSERT INTO ODS_DM_PRODUCTOS VALUES (999999 ,'DESCONOCIDO', NOW(), NOW());
INSERT INTO ODS_DM_PRODUCTOS VALUES (999998 ,'NO APLICA', NOW(), NOW());

COMMIT;
/*--------------------------------------------------------------------------*/

/*- INSERTAMOS LOS DISTINTOS VALORES DE CANALES DE STAGING -------------*/ 
INSERT INTO ODS_DM_CANALES (DE_CANAL, FC_INSERT, FC_MODIFICACION)
SELECT DISTINCT UPPER(TRIM(CHANNEL)) DE_CANAL, NOW(), NOW()
FROM STAGE.STG_PRODUCTOS_CRM
WHERE LENGTH(TRIM(CHANNEL))!=0;

COMMIT;

INSERT INTO ODS_DM_CANALES VALUES (999999 ,'DESCONOCIDO', NOW(), NOW());
INSERT INTO ODS_DM_CANALES VALUES (999998 ,'NO APLICA', NOW(), NOW());

COMMIT;
/*--------------------------------------------------------------------------*/


/* MIRAMOS SI HAY DIRECCIONES DE PRODUCTOS QUE YA ESTEN EN ODS_DM_DIRECCIONES */
CREATE TABLE IF NOT EXISTS TMP_DIRECCIONES_PRODUCTOS_REPETIDAS AS
SELECT DISTINCT DIR.ID_DIRECCION ID_DIRECCION,UPPER(PRODUCT_ADDRESS) DIRECCION_PRODUCTO,
		UPPER(PRODUCT_POSTAL_CODE) CP_PRODUCTO
FROM STAGE.stg_productos_crm PRO
	INNER JOIN ODS.ODS_HC_DIRECCIONES DIR ON 
			DE_DIRECCION = UPPER(PRO.PRODUCT_ADDRESS)
		AND DE_CP = PRO.PRODUCT_POSTAL_CODE
WHERE LENGTH(TRIM(PRODUCT_ADDRESS)) != 0
  AND LENGTH(TRIM(PRODUCT_POSTAL_CODE)) != 0
ORDER BY 1 DESC;
/*
7660, 42 NANCY TRAIL, 89036
6357, 35 UTAH AVENUE, 89519
5311, 3 CARBERRY COURT, 85705
*/
COMMIT;
ANALYZE TABLE TMP_DIRECCIONES_PRODUCTOS_REPETIDAS;

/* INSERTAMOS LAS DIRECCIONES MENOS LAS QUE YA ESTAN EN ODS*/
INSERT INTO ODS.ODS_HC_DIRECCIONES (DE_DIRECCION, DE_CP, ID_CIUDAD_ESTADO, FC_INSERT, FC_MODIFICACION)
SELECT DISTINCT(UPPER(TRIM(PRO.PRODUCT_ADDRESS))) DE_DIRECCION
	   ,CASE WHEN LENGTH(PRO.PRODUCT_POSTAL_CODE)!=0 THEN TRIM(PRO.PRODUCT_POSTAL_CODE) ELSE 99999 END CP
	   ,CIU.ID_CIUDAD_ESTADO ID_CIUDAD
	   ,NOW() FC_INSERT
	   ,NOW() FC_MODIFICACION 
  FROM STAGE.STG_PRODUCTOS_CRM PRO
	INNER JOIN ODS.ODS_DM_PAISES PAI ON 
		CASE WHEN LENGTH(TRIM(PRO.PRODUCT_COUNTRY))!=0 THEN 
			CASE WHEN UPPER(PRO.PRODUCT_COUNTRY) = 'UNITED STATES'
				THEN 'US'
				ELSE UPPER(PRO.PRODUCT_COUNTRY)
			END
		ELSE
			'DESCONOCIDO'
		END = PAI.DE_PAIS
	INNER JOIN ODS.ODS_DM_CIUDADES_ESTADOS CIU ON
		CASE WHEN LENGTH(TRIM(PRO.PRODUCT_CITY))!=0 THEN
			UPPER(PRO.PRODUCT_CITY)
		ELSE 
			'DESCONOCIDO'
		END = CIU.DE_CIUDAD
		AND 
		CASE WHEN LENGTH(TRIM(PRO.PRODUCT_STATE))!=0 THEN
			UPPER(PRO.PRODUCT_STATE)
		ELSE
			'DESCONOCIDO'
		END = CIU.DE_ESTADO
	LEFT JOIN ODS.TMP_DIRECCIONES_PRODUCTOS_REPETIDAS TMP_DIR ON 
		TMP_DIR.DIRECCION_PRODUCTO = PRO.PRODUCT_ADDRESS
		AND TMP_DIR.CP_PRODUCTO = PRO.PRODUCT_POSTAL_CODE
 WHERE LENGTH(TRIM(PRO.PRODUCT_ADDRESS))!=0
	AND TMP_DIR.DIRECCION_PRODUCTO IS NULL
	AND TMP_DIR.CP_PRODUCTO IS NULL;
/*77866*/

CREATE TABLE TMP_DIRECCIONES_PRODUCTOS AS
SELECT DIR.ID_DIRECCION
	   ,DIR.DE_DIRECCION
	   ,DIR.DE_CP
	   ,CIU.DE_CIUDAD
	   ,CIU.DE_ESTADO
	   ,PAI.DE_PAIS
  FROM ODS.ODS_HC_DIRECCIONES DIR
	INNER JOIN ODS.ODS_DM_CIUDADES_ESTADOS CIU ON DIR.ID_CIUDAD_ESTADO = CIU.ID_CIUDAD_ESTADO
	INNER JOIN ODS.ODS_DM_PAISES PAI ON CIU.ID_PAIS = PAI.ID_PAIS;
/*95365*/
COMMIT;

ANALYZE TABLE TMP_DIRECCIONES_PRODUCTOS;

CREATE TABLE TMP_DIRECCIONES_PRODUCTOS2 AS
SELECT PRO.PRODUCT_ID ID_PRODUCTO
	   ,DIR.ID_DIRECCION
  FROM STAGE.STG_PRODUCTOS_CRM PRO
	INNER JOIN ODS.TMP_DIRECCIONES_PRODUCTOS DIR ON
		CASE WHEN LENGTH(TRIM(PRO.PRODUCT_ADDRESS))!=0 THEN
			UPPER(TRIM(PRO.PRODUCT_ADDRESS))
		ELSE
			'DESCONOCIDO'
		END = DIR.DE_DIRECCION
		AND
		CASE WHEN LENGTH(TRIM(PRO.PRODUCT_POSTAL_CODE))!=0 THEN
			TRIM(PRO.PRODUCT_POSTAL_CODE)
		ELSE
			99999
		END = DIR.DE_CP
		AND
		CASE WHEN LENGTH(TRIM(PRO.PRODUCT_CITY))!=0 THEN
			UPPER(TRIM(PRO.PRODUCT_CITY))
		ELSE
			'DESCONOCIDO'
		END = DIR.DE_CIUDAD
		AND
		CASE WHEN LENGTH(TRIM(PRO.PRODUCT_STATE))!=0 THEN
			UPPER(TRIM(PRO.PRODUCT_STATE))
		ELSE
			'DESCONOCIDO'
		END = DIR.DE_ESTADO
		AND 
		CASE WHEN LENGTH(TRIM(PRO.PRODUCT_COUNTRY))!=0 THEN
			REPLACE(UPPER(TRIM(PRO.PRODUCT_COUNTRY)),'UNITED STATES','US')			
		ELSE
			'DESCONOCIDO'
		END = DIR.DE_PAIS;
/*77877*/
COMMIT;

ANALYZE TABLE TMP_DIRECCIONES_PRODUCTOS2;


/* GURADAMOS LA INFO DE LOS CANALES PARA CADA SERVICIO */
CREATE TABLE IF NOT EXISTS TMP_SERVICIOS_CANAL AS
SELECT PRO.PRODUCT_ID,CAN.ID_CANAL
FROM STAGE.STG_PRODUCTOS_CRM PRO
LEFT OUTER JOIN ODS.ODS_DM_CANALES CAN ON CASE WHEN LENGTH(TRIM(CHANNEL))!=0 THEN UPPER(TRIM(CHANNEL)) ELSE 'DESCONOCIDO' END = CAN.DE_CANAL;
/*78495*/
COMMIT;

ANALYZE TABLE TMP_SERVICIOS_CANAL;

/* GURADAMOS LA INFO DE LOS PRODUCTOS PARA CADA SERVICIO (SABEMOS QUE NO HAY NULOS)*/
CREATE TABLE IF NOT EXISTS TMP_SERVICIOS_PROD AS
SELECT PRO.PRODUCT_ID,DMPRO.ID_PRODUCTO
  FROM STAGE.STG_PRODUCTOS_CRM PRO
LEFT OUTER JOIN ODS.ODS_DM_PRODUCTOS DMPRO ON UPPER(TRIM(PRO.PRODUCT_NAME)) = DMPRO.DE_PRODUCTO;
/*78495*/
COMMIT;

ANALYZE TABLE TMP_SERVICIOS_PROD;

ALTER TABLE `ods`.`tmp_servicios_prod` ADD INDEX `id_pro_idx` (`PRODUCT_ID` ASC);

CREATE TABLE IF NOT EXISTS TMP_SERVICIOS_PROD_CAN AS
SELECT PROD.PRODUCT_ID,PROD.ID_PRODUCTO,CAN.ID_CANAL
FROM TMP_SERVICIOS_CANAL CAN
LEFT OUTER JOIN TMP_SERVICIOS_PROD PROD ON PROD.PRODUCT_ID = CAN.PRODUCT_ID;
/*78495*/
COMMIT;

ALTER TABLE TMP_SERVICIOS_PROD_CAN ADD INDEX  ID_PRO_CAN_IDX (PRODUCT_ID);

ANALYZE TABLE TMP_SERVICIOS_PROD_CAN;

/* GURADAMOS LA INFO DE LOS CLIENTES PARA CADA SERVICIO */
# PRIMERO MIRAMOS CUANTOS TENEMOS YA EN ODS
SELECT COUNT(*)
FROM STAGE.stg_productos_crm PROD
	INNER JOIN ODS.ods_hc_clientes CLI ON PROD.CUSTOMER_ID = CLI.ID_CLIENTE; 
/*
# COUNT(*)
78467
78495 - 78467 = 28 NOS FALTAN
*/    
CREATE TABLE IF NOT EXISTS TMP_SERVICIOS_CLI AS
SELECT PROD.PRODUCT_ID, CLI.ID_CLIENTE
FROM STAGE.stg_productos_crm PROD
LEFT OUTER JOIN ODS.ods_hc_clientes CLI ON PROD.CUSTOMER_ID = CLI.ID_CLIENTE;
/*78495*/
COMMIT;

ALTER TABLE TMP_SERVICIOS_CLI ADD INDEX  ID_PRO_CLI_IDX (PRODUCT_ID);

ANALYZE TABLE TMP_SERVICIOS_CLI;

CREATE TABLE IF NOT EXISTS TMP_SERVICIOS_PROD_CAN_CLI AS
SELECT PROD.PRODUCT_ID,PROD.ID_PRODUCTO,PROD.ID_CANAL,CLI.ID_CLIENTE
FROM TMP_SERVICIOS_PROD_CAN PROD
LEFT OUTER JOIN TMP_SERVICIOS_CLI CLI ON PROD.PRODUCT_ID =  CLI.PRODUCT_ID;

COMMIT;

ALTER TABLE TMP_SERVICIOS_PROD_CAN_CLI ADD INDEX  ID_PRO_CAN_CLI_IDX (PRODUCT_ID);


ANALYZE TABLE TMP_SERVICIOS_PROD_CAN_CLI;

ALTER TABLE TMP_DIRECCIONES_PRODUCTOS2 ADD INDEX  ID_TMP_PRO_DIR_IDX (ID_PRODUCTO);

INSERT INTO ODS_HC_SERVICIOS
SELECT PRO.PRODUCT_ID 											AS ID_SERVICIO
	   ,TMP.ID_CLIENTE 											AS ID_CLIENTE
	   ,TMP.ID_PRODUCTO 										AS ID_PRODUCTO
	   ,TMP.ID_CANAL 											AS ID_CANAL
	   ,CASE WHEN LENGTH(TRIM(PRO.AGENT_CODE))!=0 THEN 
			CAST(TRIM(PRO.AGENT_CODE) AS UNSIGNED INTEGER)
		ELSE NULL END 											AS ID_AGENTE
	   ,DIR.ID_DIRECCION 										AS ID_DIRECCION_SERVICIO
	   ,CASE WHEN LENGTH(TRIM(PRO.ACCESS_POINT))!=0 THEN
			TRIM(UPPER(PRO.ACCESS_POINT))
		ELSE 'DESCONOCIDO' END 									AS PUNTO_ACCESO
	   ,CASE WHEN LENGTH(TRIM(PRO.START_DATE))!=0 THEN 
			STR_TO_DATE(START_DATE,'%d/%m/%Y') 
		ELSE STR_TO_DATE('31/12/9999','%d/%m/%Y') END 			AS FC_INICIO
	   ,CASE WHEN LENGTH(TRIM(PRO.INSTALL_DATE))!=0 THEN
			STR_TO_DATE(INSTALL_DATE, '%Y-%m-%d %H:%i:%s UTC')
		ELSE STR_TO_DATE('31/12/9999','%d/%m/%Y') END 			AS FC_INSTALACION
	   ,CASE WHEN LENGTH(TRIM(PRO.END_DATE))!=0 THEN
			STR_TO_DATE(END_DATE, '%Y-%m-%d %H:%i:%s UTC')
		ELSE STR_TO_DATE('31/12/9999','%d/%m/%Y') END 			AS FC_FIN
	   ,NOW()
	   ,STR_TO_DATE('31/12/9999','%d/%m/%Y') 
  FROM STAGE.STG_PRODUCTOS_CRM PRO
	LEFT OUTER JOIN ODS.TMP_SERVICIOS_PROD_CAN_CLI TMP ON
		TMP.PRODUCT_ID = PRO.PRODUCT_ID
	LEFT OUTER JOIN ODS.TMP_DIRECCIONES_PRODUCTOS2 DIR ON
		DIR.ID_PRODUCTO = PRO.PRODUCT_ID;
/*78495*/        

COMMIT;

ANALYZE TABLE ODS_HC_SERVICIOS;
        