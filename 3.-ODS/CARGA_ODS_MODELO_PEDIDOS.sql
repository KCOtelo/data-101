USE ODS;

/*- INSERTAMOS LOS VALORES DEL DOMINIO ODS_DM_ETAPAS ------------------*/
INSERT INTO ODS.ODS_DM_ETAPAS (DE_ETAPA,FC_INSERT,FC_MODIFICACION)
SELECT DISTINCT UPPER(TRIM(PHASE)) DE_DEPARTAMENTO, NOW(), NOW()
FROM STAGE.STG_ORDERS_CRM
WHERE LENGTH(TRIM(PHASE))!=0;

COMMIT;

INSERT INTO ODS_DM_ETAPAS VALUES (999 ,'DESCONOCIDO', NOW(), NOW());
INSERT INTO ODS_DM_ETAPAS VALUES (998 ,'NO APLICA', NOW(), NOW());

COMMIT;

ANALYZE TABLE ODS_DM_ETAPAS;
/*----------------------------------------------------------------------*/

/*- INSERTAMOS LOS VALORES DEL DOMINIO ODS_DM_AGENTES ------------------*/
# CARGAMOS EN UNA TABLA TEMPORAL LOS AGENTES QUE YA TENEMOS EN ODS
CREATE TABLE IF NOT EXISTS TMP_AGENTES_REPETIDOS AS
SELECT DISTINCT AGE.ID_AGENTE,AGE.DE_AGENTE
FROM ODS.ODS_DM_AGENTES AGE
INNER JOIN STAGE.STG_ORDERS_CRM ORD ON UPPER(TRIM(ORD.AGENT)) = AGE.DE_AGENTE;

COMMIT;

ANALYZE TABLE TMP_AGENTES_REPETIDOS;

# CARGAMOS EN ODS TODOS LOS AGENTES MENOS LOS DE LA TABLA TEMPORAL QUE YA TENIAMOS
INSERT INTO ODS.ODS_DM_AGENTES (DE_AGENTE,FC_INSERT,FC_MODIFICACION)
SELECT DISTINCT(UPPER(TRIM(ORD.AGENT))) AS DE_AGENTE
	   ,NOW()							AS FC_INSERT
       ,NOW()							AS FC_MODIFICACION
  FROM STAGE.STG_ORDERS_CRM ORD
LEFT JOIN TMP_AGENTES_REPETIDOS TMP ON TMP.DE_AGENTE = UPPER(TRIM(ORD.AGENT))
 WHERE LENGTH(TRIM(ORD.AGENT))!=0
   AND TMP.DE_AGENTE IS NULL;
   
COMMIT;
/*-----------------------------------------------------------------------*/


/*- INSERTAMOS LOS VALORES DE  ODS_HC_PEDIDOS ---------------------------*/
INSERT INTO ODS.ODS_HC_PEDIDOS (ID_OP_GRUPO_PEDIDO, ID_SERVICIO,
								ID_ETAPA, ID_AGENTE, FC_INICIO, FC_FIN,
                                FC_INSERT, FC_MODIFICACION)                            
SELECT ORD.ID 			 						AS ID_OP_GRUPO_PEDIDO
	   ,ORD.ORDER          						AS ID_SERVICIO
       ,ETA.ID_ETAPA			 				AS ID_ETAPA
       ,AGE.ID_AGENTE							AS ID_AGENTE	   
       ,CASE WHEN LENGTH(TRIM(ORD.START_DT))!= 0 THEN
				CAST(ORD.START_DT AS DATETIME)
			ELSE
				NULL
		END										AS FC_INICIO
       ,CASE WHEN LENGTH(TRIM(ORD.END_DT)) != 0 THEN
				CAST(ORD.END_DT AS DATETIME)
			ELSE
				NULL
		END 									AS FC_FIN
       ,NOW()									AS FC_INSERT
       ,STR_TO_DATE('31/12/9999','%d/%m/%Y')	AS FC_MODIFICACION
  FROM STAGE.STG_ORDERS_CRM ORD
	INNER JOIN ODS.ODS_DM_ETAPAS ETA ON
		CASE WHEN LENGTH(TRIM(ORD.PHASE)) != 0 THEN
			UPPER(TRIM(ORD.PHASE))
		ELSE
			'DESCONOCIDO'
		END = ETA.DE_ETAPA
	INNER JOIN ODS.ODS_DM_AGENTES AGE ON
		CASE WHEN LENGTH(TRIM(ORD.AGENT)) != 0 THEN
			UPPER(TRIM(ORD.AGENT))
		ELSE
			'DESCONOCIDO'
		END = AGE.DE_AGENTE;
		
        
COMMIT;        
        
ANALYZE TABLE ODS.ODS_HC_PEDIDOS;
/*-----------------------------------------------------------------------*/
       
# ACTUALIZAMOS EL ID_PEDIDO DE LA TABLA ODS_HC_SERVICIOS       
UPDATE ODS.ODS_HC_SERVICIOS SER
INNER JOIN ODS.ODS_HC_PEDIDOS PED ON PED.ID_SERVICIO = SER.ID_SERVICIO
   SET SER.ID_PEDIDO = PED.ID_PEDIDO;
 
COMMIT;
 
/*
 78000 REGISTROS MODIFICADOS QUE SON EL TOTAL DE ID_PEDIDOS DISTINTOS
*/