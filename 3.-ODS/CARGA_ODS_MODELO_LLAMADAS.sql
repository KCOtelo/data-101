USE ODS;

/*- INSERTAMOS LOS VALORES DEL DOMINIO ODS_DM_DEPARTAMENTOS ------------------*/
INSERT INTO ODS.ODS_DM_DEPARTAMENTOS (DE_DEPARTAMENTO,FC_INSERT,FC_MODIFICACION)
SELECT DISTINCT UPPER(TRIM(SERVICE)) DE_DEPARTAMENTO, NOW(), NOW()
FROM STAGE.STG_CONTACTOS_IVR
WHERE LENGTH(TRIM(SERVICE))!=0;

COMMIT;

INSERT INTO ODS_DM_DEPARTAMENTOS VALUES (999 ,'DESCONOCIDO', NOW(), NOW());
INSERT INTO ODS_DM_DEPARTAMENTOS VALUES (998 ,'NO APLICA', NOW(), NOW());

COMMIT;

ANALYZE TABLE ODS_DM_METODOS_PAGO;
/*---------------------------------------------------------------------------*/

/*- INSERTAMOS LOS VALORES DEL DOMINIO ODS_DM_AGENTES ------------------*/
INSERT INTO ODS.ODS_DM_AGENTES (DE_AGENTE,FC_INSERT,FC_MODIFICACION)
SELECT DISTINCT UPPER(TRIM(AGENT)) DE_DEPARTAMENTO, NOW(), NOW()
FROM STAGE.STG_CONTACTOS_IVR
WHERE LENGTH(TRIM(AGENT))!=0;

COMMIT;

INSERT INTO ODS_DM_AGENTES VALUES (999 ,'DESCONOCIDO', NOW(), NOW());
INSERT INTO ODS_DM_AGENTES VALUES (998 ,'NO APLICA', NOW(), NOW());

COMMIT;

ANALYZE TABLE ODS_DM_AGENTES;
/*---------------------------------------------------------------------------*/


/*- INSERTAMOS LOS VALORES DE ODS_HC_LLAMADAS -------------------------------*/

# PRIMERO CREAMOS UNA TABLA DONDE PARA CADA ID DE LLAMADA LE ASIGNAMOS EL 
# PRIMER NÚMERO DE TELEFONO AL QUE SE LLAMÓ. DE ESTA MANERA LUEGO PONDREMOS
# ESTE NÚMERO PARA TODAS LAS LLAMADAS CON EL MISMO ID

DROP TABLE IF EXISTS TMP_LLAMADAS;

CREATE TABLE TMP_LLAMADAS AS
SELECT CON1.ID,CON1.PHONE_NUMBER
FROM STAGE.STG_CONTACTOS_IVR CON1
INNER JOIN (
		SELECT CON2.ID,MIN(CON2.START_DATETIME) START_DATETIME
		FROM STAGE.STG_CONTACTOS_IVR CON2		
		GROUP BY CON2.ID
	) B ON B.ID = CON1.ID
		AND B.START_DATETIME = CON1.START_DATETIME;
     
ALTER TABLE ODS.TMP_LLAMADAS ADD INDEX fk_idcall_idx (ID ASC);  
ANALYZE TABLE ODS.TMP_LLAMADAS;   

# COMPROBAMOS LOS DATOS
SELECT COUNT(*) TOTAL_REGISTROS
	   ,COUNT(DISTINCT ID) ID_DISTINTOS
       ,COUNT(DISTINCT PHONE_NUMBER) TELF_DISTINTOS
FROM TMP_LLAMADAS;
/*
# TOTAL_REGISTROS, ID_DISTINTOS, TELF_DISTINTOS
202717, 150000, 18226
*/

# TABLA TEMPORAL PARA RELACIONAR CADA LLAMADA CON SU AGENTE 
# Y DEPARTAMENTO. !! EN ESTE CASO NO NOS BASTA EL ID COMO 
# CLAVE UNICA (YA QUE NO ES UNICO)!! POR TANTO AÑADIMOS EL
# START_DATETIME PARA TENER UNA CLAVE UNICA CON LOS DOS
# CAMPOS PARA LUEGO CRUZARLA CON LA PRINCIPAL
DROP TABLE IF EXISTS TMP_AGE_DEP_LLAMADA;

CREATE TABLE TMP_AGE_DEP_LLAMADA AS
SELECT CON.ID, CON.START_DATETIME
	   ,AGE.ID_AGENTE
       ,DEP.ID_DEPARTAMENTO
  FROM STAGE.STG_CONTACTOS_IVR CON
	INNER JOIN ODS.ODS_DM_AGENTES AGE ON
		CASE WHEN LENGTH(TRIM(CON.AGENT)) != 0 THEN
			UPPER(TRIM(CON.AGENT))
		ELSE
			'DESCONOCIDO'
		END = AGE.DE_AGENTE
	INNER JOIN ODS.ODS_DM_DEPARTAMENTOS DEP ON
		CASE WHEN LENGTH(TRIM(CON.SERVICE)) != 0 THEN
			UPPER(TRIM(CON.SERVICE))
		ELSE
			'DESCONOCIDO'
		END = DEP.DE_DEPARTAMENTO;
 
ALTER TABLE ODS.TMP_AGE_DEP_LLAMADA ADD INDEX fk_tmp_age_dep_call_idx (ID ASC); 
ANALYZE TABLE ODS.TMP_AGE_DEP_LLAMADA;

#COMPROBAMOS LOS DATOS
SELECT COUNT(*) TOTAL_REGISTROS
	   ,COUNT(DISTINCT ID) ID_DISTINTOS
       ,COUNT(DISTINCT ID_AGENTE) AGENTES_DISTINTOS
       ,COUNT(DISTINCT ID_DEPARTAMENTO) DEPARTAMENTOS_DISTINTOS
FROM TMP_AGE_DEP_LLAMADA;
/*
# TOTAL_REGISTROS, ID_DISTINTOS, AGENTES_DISTINTOS, DEPARTAMENTOS_DISTINTOS
202717, 150000, 594, 7
*/

INSERT INTO ODS.ODS_HC_LLAMADAS (ID_OP_LLAMADA, ID_CLIENTE, ID_DEPARTAMENTO,ID_AGENTE
								,TELEFONO_LLAMADA, FLG_TRANSFERIDO, FC_INICIO_LLAMADA
                                ,FC_FIN_LLAMADA
                                , FC_INSERT, FC_MODIFICACION)
SELECT CON.ID 			 						AS ID_OP_LLAMADA
	   ,NULL             						AS ID_CLIENTE
       ,AGE_DEP.ID_DEPARTAMENTO 				AS ID_DEPARTAMENTO
       ,AGE_DEP.ID_AGENTE						AS ID_AGENTE
	   ,CASE WHEN LENGTH(TRIM(CAL.PHONE_NUMBER))!=0 THEN
				CAST(TRIM(CAL.PHONE_NUMBER) AS UNSIGNED)
			ELSE
				NULL
		END										AS TELEFONO_LLAMADA
       ,CASE UPPER(TRIM(CON.FLG_TRANSFER)) 
			WHEN 'TRUE' THEN 1
            WHEN 'FALSE' THEN 0 
            ELSE 0 	 # ASUMIMOS QUE CUALQUIER COSA QUE NO SEA NI TRUE NI FALSE ES 0 
		END 									AS FLG_TRANSFERIDO
       ,CASE WHEN LENGTH(TRIM(CON.START_DATETIME))!= 0 THEN
				CAST(CON.START_DATETIME AS DATETIME)
			ELSE
				NULL
		END										AS FC_INICIO_LLAMADA
       ,CASE WHEN LENGTH(TRIM(CON.END_DATETIME)) != 0 THEN
				CAST(CON.END_DATETIME AS DATETIME)
			ELSE
				NULL
		END 									AS FC_FIN_LLAMADA
       ,NOW()									AS FC_INSERT
       ,STR_TO_DATE('31/12/9999','%d/%m/%Y')	AS FC_MODIFICACION
  FROM STAGE.STG_CONTACTOS_IVR CON
	INNER JOIN ODS.TMP_AGE_DEP_LLAMADA AGE_DEP ON
		AGE_DEP.ID = CON.ID
        AND AGE_DEP.START_DATETIME = CON.START_DATETIME
	INNER JOIN ODS.TMP_LLAMADAS CAL ON
		CAL.ID = CON.ID;
		
        
COMMIT;        
        
ANALYZE TABLE ODS.ODS_HC_LLAMADAS;
       