USE STAGE;

SELECT COUNT(*) TOTAL_REGISTROS 
,SUM(CASE WHEN LENGTH(ID)!=0 THEN 1 ELSE 0 END) TOTAL_ID,COUNT(DISTINCT CASE WHEN LENGTH(TRIM(ID))!=0 THEN ID ELSE 0 END) TOTAL_DISTINTOS_ID,COUNT(DISTINCT CASE WHEN LENGTH(TRIM(ID))!=0 THEN ID ELSE NULL END) TOTAL_DISTINTOS_ID
,SUM(CASE WHEN LENGTH(ORD.ORDER)!=0 THEN 1 ELSE 0 END) TOTAL_ORDER,COUNT(DISTINCT CASE WHEN LENGTH(TRIM(ORD.ORDER))!=0 THEN ORD.ORDER ELSE 0 END) TOTAL_DISTINTOS_ORDER,COUNT(DISTINCT CASE WHEN LENGTH(TRIM(ORD.ORDER))!=0 THEN ORD.ORDER ELSE NULL END) TOTAL_DISTINTOS_ORDER
,SUM(CASE WHEN LENGTH(PHASE)!=0 THEN 1 ELSE 0 END) TOTAL_PHASE,COUNT(DISTINCT CASE WHEN LENGTH(TRIM(PHASE))!=0 THEN PHASE ELSE 0 END) TOTAL_DISTINTOS_PHASE,COUNT(DISTINCT CASE WHEN LENGTH(TRIM(PHASE))!=0 THEN PHASE ELSE NULL END) TOTAL_DISTINTOS_PHASE
,SUM(CASE WHEN LENGTH(AGENT)!=0 THEN 1 ELSE 0 END) TOTAL_AGENT,COUNT(DISTINCT CASE WHEN LENGTH(TRIM(AGENT))!=0 THEN AGENT ELSE 0 END) TOTAL_DISTINTOS_AGENT,COUNT(DISTINCT CASE WHEN LENGTH(TRIM(AGENT))!=0 THEN AGENT ELSE NULL END) TOTAL_DISTINTOS_AGENT
,SUM(CASE WHEN LENGTH(START_DT)!=0 THEN 1 ELSE 0 END) TOTAL_START_DT,COUNT(DISTINCT CASE WHEN LENGTH(TRIM(START_DT))!=0 THEN START_DT ELSE 0 END) TOTAL_DISTINTOS_START_DT,COUNT(DISTINCT CASE WHEN LENGTH(TRIM(START_DT))!=0 THEN START_DT ELSE NULL END) TOTAL_DISTINTOS_START_DT
,SUM(CASE WHEN LENGTH(END_DT)!=0 THEN 1 ELSE 0 END) TOTAL_END_DT,COUNT(DISTINCT CASE WHEN LENGTH(TRIM(END_DT))!=0 THEN END_DT ELSE 0 END) TOTAL_DISTINTOS_END_DT,COUNT(DISTINCT CASE WHEN LENGTH(TRIM(END_DT))!=0 THEN END_DT ELSE NULL END) TOTAL_DISTINTOS_END_DT
FROM STAGE.STG_ORDERS_CRM ORD;


/*-------------------------- ID --------------------------------*/
# SABEMOS QUE SE REPITEN ALGUNOS ID's, VEAMOS SI HAY ALGÚN PATRÓN
SELECT ID,COUNT(*)
FROM STAGE.STG_ORDERS_CRM
GROUP BY ID 
ORDER BY 2 DESC;

/*
# ID, COUNT(*)
 468472, 6
1394999, 6
1233625, 6
1227498, 5
1017619, 5
 105976, 5
1369375, 5
1244211, 5
 369046, 5
 200071, 5
 224434, 5

...

LOS IDENTIFICADORE SE AGRUPAN COMO MÁXIMO DE 6 EN 6
*/

SELECT *
FROM STAGE.STG_ORDERS_CRM
WHERE ID IN ('468472','1394999','1233625','1227498','1017619','105976','1369375')
ORDER BY ID, CAST(START_DT AS DATETIME);
/*
#    ID,  ORDER, PHASE,                       AGENT, 				   START_DT, 					 END_DT
1017619, 544235, Init,               tiffanystewart, 2017-10-09 22:46:54.224896, 
1017619, 544234, Network connection, robinsoncarol,  2017-10-09 23:37:12.224896, 2017-10-16 05:40:12.224896
1017619, 544234, Preparing logistic, cynthia38,      2017-10-16 05:40:12.224896, 2017-10-16 09:59:12.224896
1017619, 544234, Shipped,            vasquezrhonda,  2017-10-16 09:59:12.224896, 2017-10-17 19:22:12.224896
1017619, 544234, Delivered,          thomas44,       2017-10-17 19:22:12.224896, 
 105976, 500450, Init,               automatic,      2017-09-20 23:00:14.224896, 2017-09-21 10:22:14.224896
 105976, 500450, Network connection, michael24,      2017-09-21 10:22:14.224896, 2017-09-24 21:48:14.224896
 105976, 500449, Shipped,            hlittle,        2017-09-23 02:52:35.224896, 2017-09-24 15:00:35.224896
 105976, 500449, Delivered,          automatic,      2017-09-24 15:00:35.224896, 
 105976, 500450, Preparing logistic, cphillips,      2017-09-24 21:48:14.224896, 2017-09-25 00:21:14.224896
1227498, 554295, Init,               automatic,      2017-10-14 08:09:14.224896, 2017-10-14 11:08:14.224896
1227498, 554295, Network connection, automatic,      2017-10-14 11:08:14.224896, 2017-10-18 16:31:14.224896
1227498, 554294, Preparing logistic, michaelclayton, 2017-10-19 08:14:54.224896, 2017-10-19 11:35:54.224896
1227498, 554294, Shipped,            turnercindy,    2017-10-19 11:35:54.224896, 2017-10-20 20:22:54.224896
1227498, 554294, Cancel,             automatic,      2017-10-20 20:22:54.224896, 

*/

# MIRMOS SI HAY ALGUNO QUE NO PODAMOS PASARLO A NUMERO POSITIVO
SELECT DISTINCT REPLACE(ID,' ','') AS IDS_MAL_FORMADOS
FROM STAGE.STG_ORDERS_CRM
WHERE REPLACE(ID,' ','') NOT REGEXP '^(\\+){0,1}([0-9]+)$'
  AND LENGTH(TRIM(ID)) != 0;

# NO DEVUELVE NINGUNO, POR LO QUE NO HABRÁ PROBLEMAS EN CARGARLOS
/*-----------------------------------------------------------------------*/

/*----------------------------- ORDER -----------------------------------*/

# TODOS LOS PEDIDOS CASAN CON UN SERVICIO
SELECT COUNT(*)
FROM STAGE.STG_ORDERS_CRM ORD
INNER JOIN ODS.ODS_HC_SERVICIOS SER ON SER.ID_SERVICIO = ORD.ORDER;
/*
# COUNT(*)
360067
*/
SELECT COUNT(*)
FROM ODS.ODS_HC_SERVICIOS SER
LEFT OUTER JOIN STAGE.STG_ORDERS_CRM ORD ON ORD.ORDER = SER.ID_SERVICIO;
/*
# COUNT(*)
360562
*/
# MIRMOS SI HAY ALGUNO QUE NO PODAMOS PASARLO A NUMERO POSITIVO
SELECT DISTINCT REPLACE(ORD.ORDER,' ','') AS IDS_MAL_FORMADOS
FROM STAGE.STG_ORDERS_CRM ORD
WHERE REPLACE(ORD.ORDER,' ','') NOT REGEXP '^(\\+){0,1}([0-9]+)$'
  AND LENGTH(TRIM(ORD.ORDER)) != 0;

# NO DEVUELVE NINGUNO, POR LO QUE NO HABRÁ PROBLEMAS EN CARGARLOS
/*-----------------------------------------------------------------------*/

/*---------------------  PHASE ---------------------------------------*/
SELECT TRIM(UPPER(PHASE)) ETAPA, COUNT(*)
FROM STAGE.STG_ORDERS_CRM
GROUP BY TRIM(UPPER(PHASE));
/*
#			  ETAPA, COUNT(*)
			CANCEL, 24152
		 DELIVERED, 53638
			  INIT, 78000
NETWORK CONNECTION, 77926
PREPARING LOGISTIC, 58404
			REFUND, 11341
		   SHIPPED, 56606

*/

# SOLO HAY 7 ETAPAS DISTINTAS, POR LO QUE CREAMOS EL 
# DOMINIO EN LA TABLA ODS_DM_ETAPAS 
/*-----------------------------------------------------------------------*/

/*---------------------  AGENT ---------------------------------------*/
SELECT DISTINCT AGE.DE_AGENTE
FROM ODS.ODS_DM_AGENTES AGE
INNER JOIN STAGE.STG_ORDERS_CRM ORD ON
	CASE WHEN LENGTH(TRIM(ORD.AGENT))!=0 THEN
		UPPER(TRIM(ORD.AGENT))
	ELSE
		'DESCONOCIDO'
	END = AGE.DE_AGENTE; 
    
/*
# DE_AGENTE
	MJONES
DESCONOCIDO
*/
/*-----------------------------------------------------------------------*/

/*---------------------  START_DT ---------------------------------------*/
SELECT LENGTH(START_DT), COUNT(*)
FROM STAGE.STG_ORDERS_CRM
GROUP BY LENGTH(START_DT); 
/*
# LENGTH(START_DT), COUNT(*)
				26, 360067

NO HAY NULOS Y TODOS TIENEN LA MISMA LONGITUD
*/

# VEAMOS EL FORMATO
SELECT START_DT
FROM STAGE.STG_ORDERS_CRM;
/*
# START_DT
2017-09-20 18:20:06.224896
2017-09-21 04:36:06.224896
2017-09-27 15:47:06.224896
2017-09-27 19:20:06.224896
2017-09-29 02:13:06.224896
2017-09-20 18:20:48.224896
2017-09-21 00:32:48.224896
...
*/
# COMPROBEMOS EL FORMATO PARA PODER PASARLO A DATETIME
SELECT START_DT 
FROM STAGE.STG_ORDERS_CRM
WHERE START_DT NOT RLIKE '^([0-9]{2,4})-([0-1][0-9])-([0-3][0-9])(( [0-2][0-9]):([0-5][0-9]):([0-5][0-9]\\.[0-9]+))$'
  AND LENGTH(TRIM(START_DT))!=0;
# NO DEVUELVE NADA, POR TANTO TODOS CUMPLEN EL FORMATO
/*---------------------------------------------------------------------------*/

/*---------------------  END_DT ---------------------------------------*/
SELECT LENGTH(END_DT), COUNT(*)
FROM STAGE.STG_ORDERS_CRM
GROUP BY LENGTH(END_DT); 
/*
# LENGTH(END_DT), COUNT(*)
			   0,  78000
			  26, 282067

HAY MUCHOS NULOS Y EL RESTO TODOS TIENEN LA MISMA LONGITUD
*/

# MIRAMOS SI HAY UN PATRON EN LAS ETAPAS CUANDO NO HAY FECHA
SELECT PHASE , COUNT(*)
FROM STAGE.STG_ORDERS_CRM
WHERE LENGTH(TRIM(END_DT))=0
GROUP BY PHASE
ORDER BY 2 DESC;
/*
# 			 PHASE, COUNT(*)
		 Delivered, 42297
			Cancel, 24152
			Refund, 11341
			  Init, 74
Preparing logistic, 70
		   Shipped, 66
*/

# VEAMOS EL FORMATO
SELECT END_DT
FROM STAGE.STG_ORDERS_CRM;
/*
# END_DT
2017-09-21 04:36:06.224896
2017-09-27 15:47:06.224896
2017-09-27 19:20:06.224896
2017-09-29 02:13:06.224896
2017-09-21 00:32:48.224896
2017-09-22 02:35:48.224896
2017-09-22 08:02:48.224896
...
*/
# COMPROBEMOS EL FORMATO PARA PODER PASARLO A DATETIME
SELECT END_DT 
FROM STAGE.STG_ORDERS_CRM
WHERE END_DT NOT RLIKE '^([0-9]{2,4})-([0-1][0-9])-([0-3][0-9])(( [0-2][0-9]):([0-5][0-9]):([0-5][0-9]\\.[0-9]+))$'
  AND LENGTH(TRIM(END_DT))!=0;
# NO DEVUELVE NADA, POR TANTO TODOS CUMPLEN EL FORMATO
/*---------------------------------------------------------------------------*/